#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HumaneSociety
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HumaneSociety")]
	public partial class LinqToSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdopter(Adopter instance);
    partial void UpdateAdopter(Adopter instance);
    partial void DeleteAdopter(Adopter instance);
    partial void InsertAnimal(Animal instance);
    partial void UpdateAnimal(Animal instance);
    partial void DeleteAnimal(Animal instance);
    partial void InsertFood(Food instance);
    partial void UpdateFood(Food instance);
    partial void DeleteFood(Food instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    #endregion
		
		public LinqToSQLDataContext() : 
				base(global::HumaneSociety.Properties.Settings.Default.HumaneSocietyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adopter> Adopters
		{
			get
			{
				return this.GetTable<Adopter>();
			}
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
		
		public System.Data.Linq.Table<Food> Foods
		{
			get
			{
				return this.GetTable<Food>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adopter")]
	public partial class Adopter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdopterID;
		
		private string _Name;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<bool> _Have_Cats;
		
		private System.Nullable<bool> _Have_Dogs;
		
		private System.Nullable<bool> _Have_Kids;
		
		private System.Nullable<bool> _First_Animal;
		
		private System.Nullable<decimal> _Wallet;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdopterIDChanging(int value);
    partial void OnAdopterIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnHave_CatsChanging(System.Nullable<bool> value);
    partial void OnHave_CatsChanged();
    partial void OnHave_DogsChanging(System.Nullable<bool> value);
    partial void OnHave_DogsChanged();
    partial void OnHave_KidsChanging(System.Nullable<bool> value);
    partial void OnHave_KidsChanged();
    partial void OnFirst_AnimalChanging(System.Nullable<bool> value);
    partial void OnFirst_AnimalChanged();
    partial void OnWalletChanging(System.Nullable<decimal> value);
    partial void OnWalletChanged();
    #endregion
		
		public Adopter()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdopterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdopterID
		{
			get
			{
				return this._AdopterID;
			}
			set
			{
				if ((this._AdopterID != value))
				{
					this.OnAdopterIDChanging(value);
					this.SendPropertyChanging();
					this._AdopterID = value;
					this.SendPropertyChanged("AdopterID");
					this.OnAdopterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Have_Cats", DbType="Bit")]
		public System.Nullable<bool> Have_Cats
		{
			get
			{
				return this._Have_Cats;
			}
			set
			{
				if ((this._Have_Cats != value))
				{
					this.OnHave_CatsChanging(value);
					this.SendPropertyChanging();
					this._Have_Cats = value;
					this.SendPropertyChanged("Have_Cats");
					this.OnHave_CatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Have_Dogs", DbType="Bit")]
		public System.Nullable<bool> Have_Dogs
		{
			get
			{
				return this._Have_Dogs;
			}
			set
			{
				if ((this._Have_Dogs != value))
				{
					this.OnHave_DogsChanging(value);
					this.SendPropertyChanging();
					this._Have_Dogs = value;
					this.SendPropertyChanged("Have_Dogs");
					this.OnHave_DogsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Have_Kids", DbType="Bit")]
		public System.Nullable<bool> Have_Kids
		{
			get
			{
				return this._Have_Kids;
			}
			set
			{
				if ((this._Have_Kids != value))
				{
					this.OnHave_KidsChanging(value);
					this.SendPropertyChanging();
					this._Have_Kids = value;
					this.SendPropertyChanged("Have_Kids");
					this.OnHave_KidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Animal", DbType="Bit")]
		public System.Nullable<bool> First_Animal
		{
			get
			{
				return this._First_Animal;
			}
			set
			{
				if ((this._First_Animal != value))
				{
					this.OnFirst_AnimalChanging(value);
					this.SendPropertyChanging();
					this._First_Animal = value;
					this.SendPropertyChanged("First_Animal");
					this.OnFirst_AnimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wallet", DbType="Money")]
		public System.Nullable<decimal> Wallet
		{
			get
			{
				return this._Wallet;
			}
			set
			{
				if ((this._Wallet != value))
				{
					this.OnWalletChanging(value);
					this.SendPropertyChanging();
					this._Wallet = value;
					this.SendPropertyChanged("Wallet");
					this.OnWalletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adopter_Animal", Storage="_Animals", ThisKey="AdopterID", OtherKey="AdopterID")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Adopter = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Adopter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animals")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnimalsID;
		
		private string _Animal1;
		
		private string _Breed;
		
		private System.Nullable<int> _FoodID;
		
		private System.Nullable<bool> _Have_Shots;
		
		private System.Nullable<bool> _Adoption_Status;
		
		private System.Nullable<int> _AdopterID;
		
		private string _Animal_Size;
		
		private string _Energy_Type;
		
		private System.Nullable<bool> _Likes_Kids;
		
		private System.Nullable<bool> _Likes_Cats;
		
		private System.Nullable<bool> _Likes_Dogs;
		
		private System.Nullable<bool> _Trained;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<bool> _Fed_Today;
		
		private EntitySet<Room> _Rooms;
		
		private EntityRef<Adopter> _Adopter;
		
		private EntityRef<Food> _Food;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnimalsIDChanging(int value);
    partial void OnAnimalsIDChanged();
    partial void OnAnimal1Changing(string value);
    partial void OnAnimal1Changed();
    partial void OnBreedChanging(string value);
    partial void OnBreedChanged();
    partial void OnFoodIDChanging(System.Nullable<int> value);
    partial void OnFoodIDChanged();
    partial void OnHave_ShotsChanging(System.Nullable<bool> value);
    partial void OnHave_ShotsChanged();
    partial void OnAdoption_StatusChanging(System.Nullable<bool> value);
    partial void OnAdoption_StatusChanged();
    partial void OnAdopterIDChanging(System.Nullable<int> value);
    partial void OnAdopterIDChanged();
    partial void OnAnimal_SizeChanging(string value);
    partial void OnAnimal_SizeChanged();
    partial void OnEnergy_TypeChanging(string value);
    partial void OnEnergy_TypeChanged();
    partial void OnLikes_KidsChanging(System.Nullable<bool> value);
    partial void OnLikes_KidsChanged();
    partial void OnLikes_CatsChanging(System.Nullable<bool> value);
    partial void OnLikes_CatsChanged();
    partial void OnLikes_DogsChanging(System.Nullable<bool> value);
    partial void OnLikes_DogsChanged();
    partial void OnTrainedChanging(System.Nullable<bool> value);
    partial void OnTrainedChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnFed_TodayChanging(System.Nullable<bool> value);
    partial void OnFed_TodayChanged();
    #endregion
		
		public Animal()
		{
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			this._Adopter = default(EntityRef<Adopter>);
			this._Food = default(EntityRef<Food>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnimalsID
		{
			get
			{
				return this._AnimalsID;
			}
			set
			{
				if ((this._AnimalsID != value))
				{
					this.OnAnimalsIDChanging(value);
					this.SendPropertyChanging();
					this._AnimalsID = value;
					this.SendPropertyChanged("AnimalsID");
					this.OnAnimalsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Animal", Storage="_Animal1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Animal1
		{
			get
			{
				return this._Animal1;
			}
			set
			{
				if ((this._Animal1 != value))
				{
					this.OnAnimal1Changing(value);
					this.SendPropertyChanging();
					this._Animal1 = value;
					this.SendPropertyChanged("Animal1");
					this.OnAnimal1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Breed
		{
			get
			{
				return this._Breed;
			}
			set
			{
				if ((this._Breed != value))
				{
					this.OnBreedChanging(value);
					this.SendPropertyChanging();
					this._Breed = value;
					this.SendPropertyChanged("Breed");
					this.OnBreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodID", DbType="Int")]
		public System.Nullable<int> FoodID
		{
			get
			{
				return this._FoodID;
			}
			set
			{
				if ((this._FoodID != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFoodIDChanging(value);
					this.SendPropertyChanging();
					this._FoodID = value;
					this.SendPropertyChanged("FoodID");
					this.OnFoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Have_Shots", DbType="Bit")]
		public System.Nullable<bool> Have_Shots
		{
			get
			{
				return this._Have_Shots;
			}
			set
			{
				if ((this._Have_Shots != value))
				{
					this.OnHave_ShotsChanging(value);
					this.SendPropertyChanging();
					this._Have_Shots = value;
					this.SendPropertyChanged("Have_Shots");
					this.OnHave_ShotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adoption_Status", DbType="Bit")]
		public System.Nullable<bool> Adoption_Status
		{
			get
			{
				return this._Adoption_Status;
			}
			set
			{
				if ((this._Adoption_Status != value))
				{
					this.OnAdoption_StatusChanging(value);
					this.SendPropertyChanging();
					this._Adoption_Status = value;
					this.SendPropertyChanged("Adoption_Status");
					this.OnAdoption_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdopterID", DbType="Int")]
		public System.Nullable<int> AdopterID
		{
			get
			{
				return this._AdopterID;
			}
			set
			{
				if ((this._AdopterID != value))
				{
					if (this._Adopter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdopterIDChanging(value);
					this.SendPropertyChanging();
					this._AdopterID = value;
					this.SendPropertyChanged("AdopterID");
					this.OnAdopterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animal_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Animal_Size
		{
			get
			{
				return this._Animal_Size;
			}
			set
			{
				if ((this._Animal_Size != value))
				{
					this.OnAnimal_SizeChanging(value);
					this.SendPropertyChanging();
					this._Animal_Size = value;
					this.SendPropertyChanged("Animal_Size");
					this.OnAnimal_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Energy_Type", DbType="VarChar(50)")]
		public string Energy_Type
		{
			get
			{
				return this._Energy_Type;
			}
			set
			{
				if ((this._Energy_Type != value))
				{
					this.OnEnergy_TypeChanging(value);
					this.SendPropertyChanging();
					this._Energy_Type = value;
					this.SendPropertyChanged("Energy_Type");
					this.OnEnergy_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Likes_Kids", DbType="Bit")]
		public System.Nullable<bool> Likes_Kids
		{
			get
			{
				return this._Likes_Kids;
			}
			set
			{
				if ((this._Likes_Kids != value))
				{
					this.OnLikes_KidsChanging(value);
					this.SendPropertyChanging();
					this._Likes_Kids = value;
					this.SendPropertyChanged("Likes_Kids");
					this.OnLikes_KidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Likes_Cats", DbType="Bit")]
		public System.Nullable<bool> Likes_Cats
		{
			get
			{
				return this._Likes_Cats;
			}
			set
			{
				if ((this._Likes_Cats != value))
				{
					this.OnLikes_CatsChanging(value);
					this.SendPropertyChanging();
					this._Likes_Cats = value;
					this.SendPropertyChanged("Likes_Cats");
					this.OnLikes_CatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Likes_Dogs", DbType="Bit")]
		public System.Nullable<bool> Likes_Dogs
		{
			get
			{
				return this._Likes_Dogs;
			}
			set
			{
				if ((this._Likes_Dogs != value))
				{
					this.OnLikes_DogsChanging(value);
					this.SendPropertyChanging();
					this._Likes_Dogs = value;
					this.SendPropertyChanged("Likes_Dogs");
					this.OnLikes_DogsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trained", DbType="Bit")]
		public System.Nullable<bool> Trained
		{
			get
			{
				return this._Trained;
			}
			set
			{
				if ((this._Trained != value))
				{
					this.OnTrainedChanging(value);
					this.SendPropertyChanging();
					this._Trained = value;
					this.SendPropertyChanged("Trained");
					this.OnTrainedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fed_Today", DbType="Bit")]
		public System.Nullable<bool> Fed_Today
		{
			get
			{
				return this._Fed_Today;
			}
			set
			{
				if ((this._Fed_Today != value))
				{
					this.OnFed_TodayChanging(value);
					this.SendPropertyChanging();
					this._Fed_Today = value;
					this.SendPropertyChanged("Fed_Today");
					this.OnFed_TodayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Room", Storage="_Rooms", ThisKey="AnimalsID", OtherKey="AnimalsID")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adopter_Animal", Storage="_Adopter", ThisKey="AdopterID", OtherKey="AdopterID", IsForeignKey=true)]
		public Adopter Adopter
		{
			get
			{
				return this._Adopter.Entity;
			}
			set
			{
				Adopter previousValue = this._Adopter.Entity;
				if (((previousValue != value) 
							|| (this._Adopter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adopter.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Adopter.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._AdopterID = value.AdopterID;
					}
					else
					{
						this._AdopterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Adopter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Animal", Storage="_Food", ThisKey="FoodID", OtherKey="FoodID", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._FoodID = value.FoodID;
					}
					else
					{
						this._FoodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Food")]
	public partial class Food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FoodID;
		
		private string _Food_Type;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodIDChanging(int value);
    partial void OnFoodIDChanged();
    partial void OnFood_TypeChanging(string value);
    partial void OnFood_TypeChanged();
    #endregion
		
		public Food()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FoodID
		{
			get
			{
				return this._FoodID;
			}
			set
			{
				if ((this._FoodID != value))
				{
					this.OnFoodIDChanging(value);
					this.SendPropertyChanging();
					this._FoodID = value;
					this.SendPropertyChanged("FoodID");
					this.OnFoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Food_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Food_Type
		{
			get
			{
				return this._Food_Type;
			}
			set
			{
				if ((this._Food_Type != value))
				{
					this.OnFood_TypeChanging(value);
					this.SendPropertyChanging();
					this._Food_Type = value;
					this.SendPropertyChanged("Food_Type");
					this.OnFood_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Animal", Storage="_Animals", ThisKey="FoodID", OtherKey="FoodID")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoomsID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<bool> _Occupied;
		
		private System.Nullable<int> _AnimalsID;
		
		private EntityRef<Animal> _Animal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomsIDChanging(int value);
    partial void OnRoomsIDChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    partial void OnOccupiedChanging(System.Nullable<bool> value);
    partial void OnOccupiedChanged();
    partial void OnAnimalsIDChanging(System.Nullable<int> value);
    partial void OnAnimalsIDChanged();
    #endregion
		
		public Room()
		{
			this._Animal = default(EntityRef<Animal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomsID
		{
			get
			{
				return this._RoomsID;
			}
			set
			{
				if ((this._RoomsID != value))
				{
					this.OnRoomsIDChanging(value);
					this.SendPropertyChanging();
					this._RoomsID = value;
					this.SendPropertyChanged("RoomsID");
					this.OnRoomsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupied", DbType="Bit")]
		public System.Nullable<bool> Occupied
		{
			get
			{
				return this._Occupied;
			}
			set
			{
				if ((this._Occupied != value))
				{
					this.OnOccupiedChanging(value);
					this.SendPropertyChanging();
					this._Occupied = value;
					this.SendPropertyChanged("Occupied");
					this.OnOccupiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalsID", DbType="Int")]
		public System.Nullable<int> AnimalsID
		{
			get
			{
				return this._AnimalsID;
			}
			set
			{
				if ((this._AnimalsID != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimalsIDChanging(value);
					this.SendPropertyChanging();
					this._AnimalsID = value;
					this.SendPropertyChanged("AnimalsID");
					this.OnAnimalsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Room", Storage="_Animal", ThisKey="AnimalsID", OtherKey="AnimalsID", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._AnimalsID = value.AnimalsID;
					}
					else
					{
						this._AnimalsID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
